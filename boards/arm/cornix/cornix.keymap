/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            bindings = <&kp>, <&kp>;

            display-name = "Mod-Tap";
        };
    };

    macros {
        Redo: Redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(Z))>;
            label = "REDO";
        };

        Undo: Undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(Z)>;
            label = "UNDO";
        };

        Copy: Copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "COPY";
        };

        Paste: Paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "PASTE";
        };

        Cut: Cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(X)>;
            label = "CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |      |   |      |  Y  |  U  |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |      |   |      |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |      |   |      |  N  |  M  |  ,  |  .  |  /  | ESC  |
            //                    | SPC | BKSP| DEL | SPC2 |   | ENT2 | ENT | SPC | F19 | RALT|

            bindings = <
&kp TAB       &kp Q               &kp W           &kp E             &kp R               &kp T                                      &kp Y        &kp U                &kp I        &kp O           &kp P                       &kp BSPC
&lt 6 ESCAPE  &mt LEFT_COMMAND A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G                                      &kp H        &mt RIGHT_CONTROL J  &mt LSHFT K  &mt LEFT_ALT L  &mt LEFT_COMMAND SEMICOLON  &lt 6 ENTER
&kp LSHFT     &kp Z               &kp X           &kp C             &kp V               &kp B            &kp K_MUTE  &kp CAPSLOCK  &kp N        &kp M                &kp COMMA    &kp DOT         &kp FSLH                    &kp APOS
&trans        &trans              &trans          &lt 1 ENTER       &lt 2 SPACE         &lt 3 BACKSPACE                            &lt 4 ENTER  &lt 5 BACKSPACE      &lt 6 F19    &kp RALT        &kp LEFT                    &kp RIGHT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Media {
            bindings = <
&trans  &kp N1    &kp N2         &kp N3         &kp N4     &kp N5                        &kp N6        &kp N7            &kp N8             &kp N9           &kp N0        &trans
&trans  &kp LGUI  &kp LALT       &kp LSHFT      &kp LCTRL  &trans                        &kp E         &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &trans
&trans  &trans    &kp C_BRI_DEC  &kp C_BRI_INC  &trans     &kp C_RECORD  &trans  &trans  &out OUT_TOG  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans    &trans         &trans         &trans     &trans                        &kp C_STOP    &kp C_PLAY_PAUSE  &kp K_MUTE         &trans           &trans        &trans
            >;
        };

        Nav {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                      &Redo      &Paste         &Copy        &Cut       &Undo    &kp BSPC
&trans  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &trans                      &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp SQT  &kp CAPS
&trans  &trans    &mkp MB4  &mkp MB5   &trans     &trans  &trans  &kp K_MUTE  &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans   &kp INS
&trans  &trans    &trans    &trans     &trans     &trans                      &kp ENTER  &kt BACKSPACE  &kp DEL      &trans     &trans   &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Mouse {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                  &Redo           &Paste          &Copy         &Cut             &Undo     &kp BSPC
&trans  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &trans                  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp APOS  &kp CAPSLOCK
&trans  &trans    &trans    &trans     &trans     &trans  &trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp UP    &trans
&trans  &trans    &trans    &trans     &trans     &trans                  &mkp MCLK       &mkp LCLK       &mkp RCLK     &kp LEFT         &kp DOWN  &kp RIGHT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        Func {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8       &kp F9     &kp PRINTSCREEN                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5       &kp F6     &trans                           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2       &kp F3     &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &kp K_CMENU  &kp SPACE  &trans                           &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Num {
            bindings = <
&trans  &kp LBKT           &kp N7  &kp N8     &kp N9     &kp ASTERISK                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp RIGHT_BRACKET  &kp N4  &kp N5     &kp N6     &kp MINUS                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE          &kp N1  &kp N2     &kp N3     &kp PLUS      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &kp N0  &kp MINUS  &kp EQUAL  &kp STAR                      &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |      |   |      |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |      |   |      |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |      |   |      |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC | SPC2 |   | ENT2 | ENT |     | ALT |

            bindings = <
&kp TAB    &kp GRAVE        &kp TILDE       &kp HASH      &kp AMPERSAND  &kp PIPE                       &kp CARET    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LBKT          &kp RBKT           &kp BSPC
&kp LSHFT  &kp EXCLAMATION  &kp UNDERSCORE  &kp COLON     &kp EQUAL      &kp DOLLAR                     &kp AT_SIGN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp SEMI           &kp SQT
&kp LSHFT  &kp PERCENT      &kp QUESTION    &kp ASTERISK  &kp PLUS       &kp BACKSLASH  &trans  &trans  &kp SLASH    &kp MINUS             &kp LESS_THAN          &kp GREATER_THAN  &kp DOUBLE_QUOTES  &trans
&trans     &trans           &trans          &trans        &kp SPACE      &trans                         &trans       &trans                &trans                 &trans            &trans             &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
